{"version":3,"sources":["components/Score/Score.js","components/Card/Card.js","App.js","index.js"],"names":["Score","props","className","title","topScore","score","Card","onClick","shuffleCharacters","id","name","src","image","App","state","clickedCharacters","Characters","Shuffled","i","length","j","Math","floor","random","temp","setState","checkIfCorrect","alert","updatedClicked","slice","push","console","log","Container","Navbar","this","Jumbotron","map","C","key","Component","ReactDOM","render","document","getElementById"],"mappings":"0RAoBeA,MAhBf,SAAeC,GACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBAAoB,4BAAKD,EAAME,QAC9C,yBAAKD,UAAU,sBAAqB,0CAAgBD,EAAMG,WAC1D,yBAAKF,UAAU,sBAAqB,8CAAoBD,EAAMI,SAEhE,yBAAKH,UAAU,OACf,yBAAKA,UAAU,uBACf,+F,qCCMSI,MAhBf,SAAcL,GACZ,OACE,yBAAKC,UAAU,OAAOK,QAAU,WAAON,EAAMO,kBAAkBP,EAAMQ,MACnE,yBAAKP,UAAU,aACb,uBAAGA,UAAU,aACXD,EAAMS,KADR,KAIE,yBAAKC,IAAKV,EAAMW,WCmFXC,E,4MAzEbC,MAAQ,CACNC,kBAAmB,GACnBC,aACAX,MAAO,EACPD,SAAU,G,EAGZI,kBAAoB,SAACC,GAGnB,IADA,IAAIQ,EAAW,EAAKH,MAAME,WACjBE,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOP,EAASC,GACtBD,EAASC,GAAKD,EAASG,GACvBH,EAASG,GAAKI,EAEhB,EAAKC,SAAS,CAACT,WAAYC,IAE3B,EAAKS,eAAejB,I,EAItBiB,eAAiB,SAACjB,GACG,EAAKK,MAAMT,MAG/B,GAAMI,KAAM,EAAKK,MAAMC,kBAarBY,MAAM,cACN,EAAKF,SAAS,CAACV,kBAAmB,GAAIV,MAAO,QAdJ,CAGzC,EAAKoB,SAAS,CAACpB,MAAO,EAAKS,MAAMT,MAAQ,IACzC,IAAIuB,EAAiB,EAAKd,MAAMC,kBAAkBc,QAClDD,EAAeE,KAAKrB,GACpB,EAAKgB,SAAS,CAACV,kBAAmBa,IAClCG,QAAQC,IAAI,EAAKlB,MAAMT,OACnB,EAAKS,MAAMT,OAAS,EAAKS,MAAMV,UACjC,EAAKqB,SAAU,CAACrB,SAAU,EAAKU,MAAMT,MAAQ,M,uDASzC,IAAD,OACP,OACA,kBAAC4B,EAAA,EAAD,CAAW/B,UAAU,OACnB,kBAACgC,EAAA,EAAD,CAAQhC,UAAU,gBAChB,0CACA,kBAAC,EAAD,CAAOG,MAAS8B,KAAKrB,MAAMT,MAAOD,SAAY+B,KAAKrB,MAAMV,YAE3D,kBAACgC,EAAA,EAAD,KACE,wBAAIlC,UAAU,UAAd,2BAIAc,EAAWqB,KAAI,SAAAC,GAEd,OACE,kBAAC,EAAD,CAAM9B,kBAAqB,EAAKA,kBAAmBC,GAAI6B,EAAE7B,GAAI8B,IAAKD,EAAE7B,GAAIC,KAAQ4B,EAAE5B,KAAME,MAAS0B,EAAE1B,gB,GA5D3F4B,a,MCflBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.78121580.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./score.css\";\r\n\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <header className=\"scoreB\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-left\"><h5>{props.title}</h5></div>\r\n        <div className=\"col-md-3 col-right\"><h6>High Score {props.topScore}</h6></div>\r\n        <div className=\"col-md-3 col-right\"><h6>Current Score: {props.score}</h6></div>\r\n      </div>\r\n      <div className=\"row\">\r\n      <div className=\"col-md-12 col-right\">\r\n      <h6>Click on a Character, but don't click on it more than once!</h6></div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Score;","\r\nimport React from \"react\";\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\" onClick= {() => {props.shuffleCharacters(props.id)}}>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">\r\n         {props.name},\r\n         \r\n        </p>\r\n          <img src={props.image}/>\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Card;","\r\nimport React, { Component } from 'react';\r\nimport Score from './components/Score/Score.js';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Characters from './characters.json';\r\nimport Card from './components/Card/Card.js';\r\n\r\n\r\n// function App() {\r\n//   return (\r\n//     <div>Hello</div>\r\n//   )\r\n// };\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    clickedCharacters: [],\r\n    Characters,\r\n    score: 0,\r\n    topScore: 0,\r\n  };\r\n\r\n  shuffleCharacters = (id) => {\r\n    // let updatedScore = this.state.score;\r\n    let Shuffled = this.state.Characters;\r\n    for (let i = Shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = Shuffled[i];\r\n      Shuffled[i] = Shuffled[j];\r\n      Shuffled[j] = temp;\r\n    };\r\n    this.setState({Characters: Shuffled})\r\n\r\n    this.checkIfCorrect(id);\r\n\r\n  };\r\n  \r\n  checkIfCorrect = (id) => {\r\n    let updatedScore = this.state.score;\r\n\r\n   \r\n   if (!(id in this.state.clickedCharacters)) {\r\n     // updatedScore++\r\n     // this.state.score = updatedScore\r\n     this.setState({score: this.state.score + 1})\r\n     let updatedClicked = this.state.clickedCharacters.slice();\r\n     updatedClicked.push(id);\r\n     this.setState({clickedCharacters: updatedClicked});\r\n     console.log(this.state.score)\r\n     if (this.state.score >= this.state.topScore){\r\n       this.setState ({topScore: this.state.score + 1})\r\n     }\r\n   } else {\r\n    //  updatedScore = 0\r\n     alert(\"Game Over!\")\r\n     this.setState({clickedCharacters: [], score: 0});\r\n   };\r\n }\r\n //This will render the jumbotron, Navbar and imgs on page\r\n render() {\r\n   return(\r\n   <Container className=\"p-3\">\r\n     <Navbar className=\"fixed-header\">\r\n       <p>Clicky Game</p>\r\n       <Score score = {this.state.score} topScore = {this.state.topScore}/>\r\n     </Navbar>\r\n     <Jumbotron>\r\n       <h1 className=\"header\">Welcome To Clicky Game</h1>\r\n\r\n      </Jumbotron>\r\n\r\n      {Characters.map(C => \r\n      {\r\n        return(\r\n          <Card shuffleCharacters = {this.shuffleCharacters} id={C.id} key={C.id} name = {C.name} image = {C.image}/>\r\n        )\r\n      })\r\n      }\r\n\r\n    </Container>\r\n    \r\n    );\r\n  };\r\n\r\n\r\n\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}